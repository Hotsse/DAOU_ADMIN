<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="common.menu">

	<select id="getMenu" parameterType="map" resultType="map">
		SELECT menu_idx as menuIdx
			, menu_nm as menuNm
			, menu_path as menuPath
			, menu_lv as menuLv
			, parent_menu_idx as parentMenuIdx
			, sort_order as sortOrder
		FROM daou_admin_menu (nolock)
		WHERE menu_idx = #{menuIdx}
	</select>
		
	<select id="getMenuList" parameterType="map" resultType="map">
		SELECT menu_idx as menuIdx
			   , menu_nm as menuNm
			   , menu_path as menuPath
		FROM daou_admin_menu (nolock)
		WHERE menu_lv = #{menuLv}
			<if test="parentMenuIdx != null and parentMenuIdx != 0">
			AND parent_menu_idx = #{parentMenuIdx}
			</if>
		ORDER BY sort_order ASC
	</select>
	
	<select id="getAllMenuList" resultType="map">
		;WITH CTE (menu_idx, menu_nm, menu_path, menu_lv, parent_menu_idx, sort_order, reg_id, reg_dt, mod_id, mod_dt, tree_order) AS (
			(
				SELECT a.menu_idx
					, a.menu_nm
					, a.menu_path
					, a.menu_lv
					, a.parent_menu_idx
					, a.sort_order
					, a.reg_id
					, a.reg_dt
					, a.mod_id
					, a.mod_dt
					, CONVERT(VARCHAR(255), RIGHT('00000' + CONVERT(VARCHAR(5), a.sort_order), 5)) as tree_order
				FROM daou_admin_menu a
				WHERE parent_menu_idx = 0
			)
			UNION ALL
			(
				SELECT b.menu_idx
					, b.menu_nm
					, b.menu_path
					, b.menu_lv
					, b.parent_menu_idx
					, b.sort_order
					, b.reg_id
					, b.reg_dt
					, b.mod_id
					, b.mod_dt
					, CONVERT(VARCHAR(255), CONVERT(NVARCHAR, c.tree_order) + ' > ' + RIGHT('00000' + CONVERT(VARCHAR(5), b.sort_order), 5)) as tree_order
				FROM daou_admin_menu b
					INNER JOIN CTE c
					ON b.parent_menu_idx = c.menu_idx
			)
		)
		SELECT menu_idx as menuIdx
			, menu_nm as menuNm
			, menu_path as menuPath
			, menu_lv as menuLv
			, parent_menu_idx as parentMenuIdx
			, sort_order as sortOrder
			, reg_id as regId
			, reg_dt as regDt
			, mod_id as modId
			, mod_dt as modDt			
		FROM CTE
		ORDER BY tree_order
	</select>
	
	
	
	<insert id="insertMenu" parameterType="map">
		INSERT INTO daou_admin_menu (
			menu_nm
			, menu_path
			, menu_lv
			, parent_menu_idx
			, sort_order
			, reg_id
			, reg_dt
			, mod_id
			, mod_dt
		)
		VALUES (
		#{menuNm}
		, #{menuPath}
		, #{menuLv}
		, #{parentMenuIdx}
		, #{sortOrder}
		, #{userId}
		, GETDATE()
		, null
		, null
		)
	</insert>
	
	<update id="updateMenu" parameterType="map">
		UPDATE daou_admin_menu
		SET menu_nm = #{menuNm}
			, menu_path = #{menuPath}
			, menu_lv = #{menuLv}
			, parent_menu_idx = #{parentMenuIdx}
			, sort_order = #{sortOrder}
			, mod_id = #{userId}
			, mod_dt = GETDATE()
		WHERE menu_idx = #{menuIdx}
	</update>
	
	<delete id="deleteMenu" parameterType="map">
		DELETE FROM daou_admin_menu
		WHERE menu_idx = #{menuIdx}
	</delete>
	
	
	<select id="getMenuAuth" parameterType="map" resultType="com.daou.admin.manager.menu.vo.MenuAuthVO">
		SELECT auth.menu_idx as menuIdx
			, auth.dept_idx as deptIdx
			, auth.role_idx as roleIdx 
			, auth.is_retrieve_yn as isRetrieveYn
			, auth.is_write_yn as isWriteYn
			, auth.is_delete_yn as isDeleteYn
			, auth.is_download_yn as isDownloadYn
		FROM daou_admin_menu menu (nolock)
			INNER JOIN daou_admin_menu_auth auth (nolock)
				ON menu.menu_idx = auth.menu_idx
		WHERE menu.menu_path = #{menuPath}
			AND auth.dept_idx = #{userDept}
			AND auth.role_idx = #{userRole}
	</select>
	
	<select id="getMenuAuthList" parameterType="map" resultType="com.daou.admin.manager.menu.vo.MenuAuthVO">
		SELECT auth.menu_idx as menuIdx
			, auth.dept_idx as deptIdx
			, dept.dept_nm as deptNm
			, auth.role_idx as roleIdx
			, role.role_nm as roleNm
			, auth.is_retrieve_yn as isRetrieveYn
			, auth.is_write_yn as isWriteYn
			, auth.is_delete_yn as isDeleteYn
			, auth.is_download_yn as isDownloadYn
		FROM daou_admin_menu_auth auth (nolock)
			LEFT OUTER JOIN daou_admin_dept dept (nolock)
			ON auth.dept_idx = dept.dept_idx
			LEFT OUTER JOIN daou_admin_role role (nolock)
			ON auth.role_idx = role.role_idx
		WHERE menu_idx = #{menuIdx}
		ORDER BY auth.dept_idx ASC, auth.role_idx ASC
	</select>
	
	<insert id="insertMenuAuth" parameterType="map">
		INSERT INTO daou_admin_menu_auth (
			menu_idx
			, dept_idx
			, role_idx
			, is_retrieve_yn
			, is_write_yn
			, is_delete_yn
			, is_download_yn
			, reg_id
			, reg_dt
			, mod_id
			, mod_dt
		) VALUES
		(
			#{menuIdx}
			, #{deptIdx}
			, #{roleIdx}
			, #{isRetrieveYn}
			, #{isWriteYn}
			, #{isDeleteYn}
			, #{isDownloadYn}
			, #{userId}
			, GETDATE()
			, null
			, null
		)
	</insert>
	
	<update id="updateMenuAuth" parameterType="map">
		UPDATE daou_admin_menu_auth
		SET is_retrieve_yn = #{isRetrieveYn}
			, is_write_yn = #{isWriteYn}
			, is_delete_yn = #{isDeleteYn}
			, is_download_yn = #{isDownloadYn}
		WHERE menu_idx = #{menuIdx}
			AND dept_idx = #{deptIdx}
			AND role_idx = #{roleIdx}
	</update>
	
	<delete id="deleteMenuAuth" parameterType="map">
		DELETE FROM daou_admin_menu_auth
		WHERE menu_idx = #{menuIdx}
			AND dept_idx = #{deptIdx}
			AND role_idx = #{roleIdx}
	</delete>
	
	<select id="getDeptList" resultType="com.daou.admin.manager.dept.vo.DeptVO">
		SELECT dept_idx as deptIdx
			, dept_nm as deptNm
		FROM daou_admin_dept (nolock)
		ORDER BY dept_idx ASC
	</select>
	
	<select id="getRoleList" resultType="com.daou.admin.manager.role.vo.RoleVO">
		SELECT role_idx as roleIdx
			, role_nm as roleNm
		FROM daou_admin_role (nolock)
		ORDER BY role_idx ASC
	</select> 

</mapper>